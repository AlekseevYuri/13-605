import matplotlib.pyplot as p
import pandas
import numpy
import scipy
import numba
import seaborn as sns
import random
import math
import pylab


data = [1.645533,
1.662017,
1.656519,
1.662131,
1.651217,
1.661255,
1.656755,
1.651312,
1.656735,
1.656849,
1.656842,
1.656923,
1.662494,
1.646063,
1.656027,
1.651597,
1.657136,
1.657139,
1.657202,
1.656432,
1.657265,
1.657291,
1.657332,
1.662009,
1.657345,
1.651939,
1.657379,
1.651991,
1.652033,
1.657572,
1.657593,
1.657434,
1.652186,
1.657557,
1.653310,
1.663274,
1.668947,
1.662307,
1.657694,
1.663404,
1.663441,
1.659286,
1.663291,
1.657961,
1.652503,
1.657037,
1.657528,
1.652443,
1.663554,
1.658070]
#Данные: измерение массы мелких деталек из одной партии (первая лаб. работа, она как раз была посвящена распределению Гаусса). Удалено одно значение (оно сильно отличается от остальных)

dfr = pandas.DataFrame(data )
print (dfr.describe())
#Анализ распределения с помощью pandas






#
#
#
if True:
    D = 0

    for da in data:#Среднее
        D+=1/50*da

    delta = 0
    for da in data:#Среднеквадратичное отклонение
        delta += 1/50*((D-da)*(D-da))
    delta = math.sqrt(delta)
    print('Среднеквадратичное отклонение:')
    print (delta)

    gauss = [i for i in range (16400, 16750)]
    g = [i/10000 for i in range (16400, 16750)]
    for ii in range (0,len(gauss)):
        i = gauss[ii]
        gauss[ii]=1/(delta *math.sqrt(2*3.14))*math.exp(-(i/10000-D)*(i/10000-D)/(2*delta*delta))#Нормальное распределение
    
    
#Обработка данных, построение нормального распределения

#
#
#



    
p.subplot(1,2,1) #Cлева строится распределение масс деталек (kde) с отображением гистограммы
p.ylim(0,175)
p.xlim(1.63,1.68)
sns_plot = sns.distplot(data, kde = 1,color = 'green')
fig = sns_plot.get_figure()
p.title('Гистограмма и плотность')

p.subplot(1,2,2)    #Справа строится распределение Гаусса с дисперсией и ожиданием, полученными обработкой экспериментальных данных
p.ylim(0,175)
p.xlim(1.63,1.68)
p.plot(g,gauss,color = 'green')
p.title('Нормальное распределение')

p.show()


